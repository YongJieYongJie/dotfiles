#shift + alt - p : yabai -m space --create

# Move to recent display / Focus recent display
shift + alt - 9 : yabai -m window --display next && yabai -m display --focus recent
shift + alt - 8 : yabai -m display --focus next

# Switch to next space, moving it to current display if necessary
#   Get current display index
#   Switch to next space (or the first space if already at the end)
#   Move space to saved display index
shift + alt - n : i=$(yabai -m query --displays --display | jq .index) && \
                  (yabai -m space --focus next || yabai -m space --focus 1) && \
                  yabai -m space --display $i

shift + alt - p : i=$(yabai -m query --displays --display | jq .index) && \
                  (yabai -m space --focus prev || yabai -m space --focus 1) && \
                  yabai -m space --display $i

# Move space to next display (or the first display if already at the end)
# NOTE: This doesn't work because index changes once things are move across
# display. See alternative approach using labels below.
#   Save previous space's index to variable
#   Save current space's index to variable
#   Move current space to next display
#   Focus previous space using saved index (to show it on the display)
#   Focus next space
#ctrl + alt - n : yabai -m space --display next || yabai -m space --display 1
#ctrl + alt - n : prevIdx=$(yabai -m query --spaces --space prev | jq .index) && \
#                 (yabai -m space --display next || yabai -m space --display 1) && \
#                 currIdx=$(yabai -m query --spaces --space | jq .index) && \
#                 yabai -m space --focus $prevIdx && \
#                 yabai -m space --focus $currIdx 

                 #/usr/bin/env osascript <<< "display notification \"previous space: $prevIdx\" with title \"skhd\"" && \
                 #/usr/bin/env osascript <<< "display notification \"previous space: $currIdx\" with title \"skhd\""

# NOTE: For the below to work, the system preferences for mission control will
# likely need to be set to "Automaticall rearrange Spaces based on most recent
# use"
# NOTE 2: It will not work nicely with Emacs, because it seems Emacs doesn't
# play nice with macOS's mission control.
# Move space to next display (or the first display if already at the end)
#   Label previous space (first three lines)
#   Label current space (second three lines)
#   Move current space to next display
#   Focus previous space using label
#   Focus current space using label
ctrl + alt - n : prevLabel="label_$RANDOM" && \
                 prevIdx=$(yabai -m query --spaces --space prev | jq .index) && \
                 yabai -m space $prevIdx --label $prevLabel && \
                 currLabel="label_$RANDOM" && \
                 currIdx=$(yabai -m query --spaces --space | jq .index) && \
                 yabai -m space $currIdx --label $currLabel && \
                 (yabai -m space --display next || yabai -m space --display 1) && \
                 yabai -m space --focus $prevLabel && \
                 yabai -m space --focus $currLabel 

ctrl + alt - p : prevLabel="label_$RANDOM" && \
                 prevIdx=$(yabai -m query --spaces --space prev | jq .index) && \
                 yabai -m space $prevIdx --label $prevLabel && \
                 currLabel="label_$RANDOM" && \
                 currIdx=$(yabai -m query --spaces --space | jq .index) && \
                 yabai -m space $currIdx --label $currLabel && \
                 (yabai -m space --display prev || ( \
                     numDisplays=$(yabai -m query --displays | grep index | cut -d':' -f2 | cut -d',' -f1 | sort | tail -n 1) && \
                     yabai -m space --display $numDisplays)) && \
                 yabai -m space --focus $prevLabel && \
                 yabai -m space --focus $currLabel 

# opens iTerm2
#alt - return : "${HOME}"/.config/yabai/scripts/open_iterm2.sh

#Show system statistics
#fn + lalt - 1 : "${HOME}"/.config/yabai/scripts/show_cpu.sh
#fn + lalt - 2 : "${HOME}"/.config/yabai/scripts/show_mem.sh
#fn + lalt - 3 : "${HOME}"/.config/yabai/scripts/show_bat.sh
#fn + lalt - 4 : "${HOME}"/.config/yabai/scripts/show_disk.sh
#fn + lalt - 5 : "${HOME}"/.config/yabai/scripts/show_song.sh

# Navigation
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Moving windows
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move focus container to workspace
shift + alt - m : yabai -m window --space last && yabai -m space --focus last
#shift + alt - p : yabai -m window --space prev && yabai -m space --focus prev
#shift + alt - n : yabai -m window --space next && yabai -m space --focus next
shift + alt - 1 : yabai -m window --space 1 && yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space 2 && yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space 3 && yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space 4 && yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space 5 && yabai -m space --focus 5
shift + alt - 6 : yabai -m window --space 6 && yabai -m space --focus 6

# Resize windows
#lctrl + alt - h : \
#    yabai -m window --resize left:-20:0 ; \
#    yabai -m window --resize right:-20:0
#
#lctrl + alt - j : \
#    yabai -m window --resize bottom:0:20 ; \
#    yabai -m window --resize top:0:20
#
#lctrl + alt - k : \
#    yabai -m window --resize top:0:-20 ; \
#    yabai -m window --resize bottom:0:-20
#
#lctrl + alt - l : \
#    yabai -m window --resize right:20:0 ; \
#    yabai -m window --resize left:20:0

# Float and center window
shift + alt - c : yabai -m window --toggle float;\
                  yabai -m window --grid 4:4:1:1:2:2

# Equalize size of windows
lctrl + alt - 0 : yabai -m space --balance

# Enable / Disable gaps in current workspace
#lctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap
#
# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 90
shift + alt - r : yabai -m space --rotate 270

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
#shift + lctrl + alt - h : yabai -m window --insert west
#shift + lctrl + alt - j : yabai -m window --insert south
#shift + lctrl + alt - k : yabai -m window --insert north
#shift + lctrl + alt - l : yabai -m window --insert east

# Float / Unfloat window
shift + alt - space : yabai -m window --toggle float

# Restart Yabai
shift + lctrl + alt - r : 
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Make window native fullscreen
shift + alt - f         : yabai -m window --toggle zoom-fullscreen
#shift + alt - f : yabai -m window --toggle native-fullscreen

